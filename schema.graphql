enum ProposalStatus {
  Sponsored
  Witnessed
  Claimed
  Cleared
  Poked
}

type Proposal @entity {
  id: ID!
  sponsor: Bytes!
  witness: Bytes
  recipient: Bytes!
  status: ProposalStatus!
  commitmentDetails: Commitment!
  sponsoringDetails: SponsoringDetails!
  witnessingDetails: WitnessingDetails
  claimingDetails: ClaimingDetails
  pokingDetails: PokingDetails
  clearingDetails: ClearingDetails
}

type Commitment @entity {
  id: ID!
  eligibleHat: BigInt!
  shares: BigInt!
  loot: BigInt!
  extraRewardAmount: BigInt!
  timeFactor: BigInt!
  sponsoredTime: BigInt!
  expirationTime: BigInt!
  contextURL: String!
  metadata: String!
  recipient: Bytes!
  extraRewardToken: Bytes!
}

type SponsoringDetails @entity {
  id: ID!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WitnessingDetails @entity {
  id: ID!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimingDetails @entity {
  id: ID!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PokingDetails @entity {
  id: ID!
  completionReport: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClearingDetails @entity {
  id: ID!
  clearedBy: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
